{"version":3,"sources":["Components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","handleSave","bind","state","item","nextProps","this","setState","e","target","value","index","saveModalDetails","className","id","tabIndex","role","type","onChange","itemHandler","onClick","Component","App","handleSubmit","event","taskDesc","elements","todoTask","length","todoList","reset","preventDefault","console","log","requiredItem","templist","deleteTodoTask","taskArray","splice","replaceModalItem","newTodo","modalData","onSubmit","name","placeholder","autoComplete","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d615e4f2.chunk.js","sourcesContent":[" import React, { Component } from 'react';\r\n\r\nclass Modal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.state = {\r\n            item:\"\" ,\r\n        }\r\n    }\r\n     \r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            item: nextProps.item,\r\n            \r\n        });\r\n    }\r\n\r\n    itemHandler(e) {\r\n        this.setState({ item: e.target.value });\r\n    }\r\n\r\n\r\n\r\n    handleSave() {\r\n        const index = this.state;\r\n        this.props.saveModalDetails(index)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit </h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                        <p><span className=\"modal-lable\">Let's make some change : </span><input value={this.state.item} onChange={(e) => this.itemHandler(e)} /></p>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n                            <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={() => { this.handleSave() }}>OK</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n ","import React,{ Component } from 'react';\r\n\r\n\r\nimport  Modal  from './Components/Modal.js';\r\nimport './Components/Style.css';\r\n\r\n\r\n class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.replaceModalItem = this.replaceModalItem.bind(this);\r\n        this.saveModalDetails = this.saveModalDetails.bind(this);\r\n \r\n     this.state={\r\n         todoList:[],\r\n         requiredItem: 0,\r\n         newTodo:\"\",\r\n\r\n     }\r\n    }\r\n    replaceModalItem(index) {\r\n        this.setState({\r\n          requiredItem: index\r\n        });\r\n      }\r\n      handleSubmit =(event)=>{\r\n        var taskDesc= event.target.elements.todoTask.value;\r\n        if(taskDesc.length >0){\r\n       this.setState({\r\n       todoList:[...this.state.todoList,taskDesc]\r\n    })\r\n       event.target.reset();\r\n        }\r\n       event.preventDefault();\r\n    }\r\n      saveModalDetails=(index)=> {\r\n         console.log(index);\r\n        const requiredItem = this.state.requiredItem;\r\n        let templist = [...this.state.todoList];\r\n        \r\n        templist[requiredItem]=index.item;\r\n        this.setState({ todoList: templist });\r\n      }\r\n    \r\n     \r\ndeleteTodoTask=(event,index)=> {\r\n     \r\n    var taskArray=[...this.state.todoList]\r\n    taskArray.splice(index,1)\r\n    \r\n    this.setState({todoList:taskArray})\r\n    \r\n}\r\n \r\n    render(){\r\n        const requiredItem = this.state.requiredItem;\r\n        let modalData = this.state.todoList[requiredItem];\r\n       console.log(this.state.todoList);\r\n    return (\r\n<div>\r\n  <div className=\"jumbotron jumbotron-fluid py-2\">\r\n  <div className=\"container\">\r\n  <h1 className=\"display-4\">Todo App</h1>\r\n  <style>{'body { background-color: aquamarine; }'}</style>\r\n  </div>\r\n  </div>\r\n<form className=\"mb-3\" onSubmit= {this.handleSubmit}>\r\n    <div className=\"input-group\">\r\n    <input type=\"text\" name=\"todoTask\" className=\"form-control\" placeholder=\"Please enter your task\" autoComplete=\"off\"/>\r\n    <div className=\"input-group-append\">\r\n    <button type=\"submit\" className=\"btn btn-outline-success\"> Add </button>\r\n    </div>\r\n    </div>\r\n</form>\r\n\r\n \r\n<ul className=\"list-group\">\r\n     {\r\n         this.state.todoList.map(\r\n             (item,index)=>{\r\n                 return<li className=\"list-group-item\"key ={index}>\r\n                     {item}    \r\n                     <button className=\"btn btn-sm btn-outline-danger float-right\" onClick={(event)=>{this.deleteTodoTask(event,index)}}>Delete</button>\r\n\r\n                     <button className=\"btn btn btn-sm btn-primary m-7 float-right\" data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n              onClick={() => this.replaceModalItem(index)}>edit</button> {\" \"}                \r\n                     \r\n                 </li>\r\n             }\r\n         )\r\n     }\r\n</ul>\r\n<div>\r\n<Modal\r\n          item={modalData}\r\n        \r\n          saveModalDetails={this.saveModalDetails}\r\n        />\r\n    \r\n  </div>\r\n\r\n</div>\r\n    \r\n      ); \r\n}\r\n\r\n\r\n }\r\n export default App ;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n   \n    <App />,\n \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}